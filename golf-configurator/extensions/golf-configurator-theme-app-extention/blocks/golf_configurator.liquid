<!-- Build programmatic hand links from variation products -->
{% assign current_hand_raw = product.metafields.custom.variation_value.value %}
{% assign current_hand_programmatic = current_hand_raw | downcase | replace: ' ', '-' %}

{% assign right_hand_link = '' %}
{% assign left_hand_link = '' %}

{% for variation_product in product.metafields.custom.variation_products.value %}
  {% assign full_product = all_products[variation_product.handle] %}
  {% assign product_hand = full_product.metafields.custom.variation_value.value %}

  {% if product_hand == 'Right Handed' %}
    {% assign right_hand_link = '/products/' | append: variation_product.handle %}
  {% elsif product_hand == 'Left Handed' %}
    {% assign left_hand_link = '/products/' | append: variation_product.handle %}
  {% endif %}
{% endfor %}

<!-- Golf Configurator App Container -->
<div
  id="golf-configurator"
  data-bundle-parent-product="{{ block.settings.bundle_parent_product | json }}"
  data-shaft-products="{{ block.settings.shaft_products | json }}"
  data-current-hand="{{ current_hand_programmatic }}"
  data-right-hand-link="{{ right_hand_link }}"
  data-left-hand-link="{{ left_hand_link }}"
>
  <!-- The Preact app will be mounted here -->
  <div
    class="loading-state"
    style="padding: 2rem; text-align: center; background: #f8f9fa; border: 1px solid #e9ecef; border-radius: 8px;"
  >
    <p>Loading Golf Configurator...</p>
  </div>
</div>

<!-- Load Golf Configurator CSS -->
{{ 'golf-configurator.bundle.css' | asset_url | stylesheet_tag }}

<!-- Load Golf Configurator JavaScript -->
<script src="{{ 'golf-configurator.bundle.js' | asset_url }}" defer></script>

<!-- Initialize the configurator when the script loads -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // The golf configurator will auto-initialize when the bundle loads
    console.log('üèåÔ∏è Golf Configurator block loaded - Version: {{ "now" | date: "%Y%m%d-%H%M%S" }}');

    // Log metafield data for verification
    const configuratorEl = document.getElementById('golf-configurator');
    console.log('üìã Programmatic Hand Data Check:', {
      element: configuratorEl,
      currentHand: configuratorEl?.getAttribute('data-current-hand'),
      rightHandLink: configuratorEl?.getAttribute('data-right-hand-link'),
      leftHandLink: configuratorEl?.getAttribute('data-left-hand-link'),
      hasHandData: !!(
        configuratorEl?.getAttribute('data-current-hand') &&
        configuratorEl?.getAttribute('data-right-hand-link') &&
        configuratorEl?.getAttribute('data-left-hand-link')
      ),
    });
  });
</script>

{% schema %}
{
  "name": "Golf Configurator 2",
  "target": "section",
  "settings": [
    {
      "type": "product",
      "id": "bundle_parent_product",
      "label": "Bundle Parent Product",
      "info": "Select the main iron set product that will be used as the bundle parent (e.g., origin-combo-length-chrome)"
    },
    {
      "type": "product_list",
      "id": "shaft_products",
      "label": "Shaft Products",
      "info": "Select the products that should be available as shaft options in the configurator"
    }
  ]
}
{% endschema %}
